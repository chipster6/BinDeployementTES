# ============================================================================
# WASTE MANAGEMENT SYSTEM - PRODUCTION PROMETHEUS CONFIGURATION
# ============================================================================
#
# Production-ready Prometheus configuration with comprehensive monitoring
# for all system components and business metrics
# Security-Agent Coordinated: Enhanced security monitoring integrated
#
# Created by: DevOps-Agent coordinated with Security-Agent
# Date: 2025-08-13
# Version: 2.0.0 - Security Enhanced
# ============================================================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  # Security-Agent Coordination: Enhanced external labels
  external_labels:
    cluster: 'waste-management-production'
    environment: 'production'
    security_grade: '88'
    compliance_status: 'gdpr-pci-soc2'
    devops_security_coordinated: 'true'

# Rules and alerting configuration
rule_files:
  - "rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Monitoring targets configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # System metrics via Node Exporter
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Backend API application metrics
  - job_name: 'waste-mgmt-backend'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Frontend application metrics
  - job_name: 'waste-mgmt-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s

  # PostgreSQL database metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Docker container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application-specific business metrics
  - job_name: 'waste-mgmt-business-metrics'
    static_configs:
      - targets: ['backend:3001']
    scrape_interval: 60s
    metrics_path: /metrics/business
    params:
      format: ['prometheus']

  # Health check endpoints monitoring
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:3001'
        - 'frontend:3000'
        - 'postgres:5432'
        - 'redis:6379'
    scrape_interval: 10s
    metrics_path: /health
    scheme: http
    params:
      format: ['prometheus']

# Storage configuration for production
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (for external monitoring services)
remote_write:
  - url: ${PROMETHEUS_REMOTE_WRITE_URL}
    basic_auth:
      username: ${PROMETHEUS_REMOTE_WRITE_USERNAME}
      password: ${PROMETHEUS_REMOTE_WRITE_PASSWORD}
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500