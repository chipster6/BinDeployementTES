# ============================================================================
# WASTE MANAGEMENT SYSTEM - FRONTEND DOCKERFILE
# ============================================================================
#
# Multi-stage Dockerfile for Next.js frontend application
# Optimized for development and production deployments
#
# Created by: Infrastructure Agent
# Date: 2025-08-12
# Version: 1.0.0
# ============================================================================

# ============================================================================
# Stage 1: Base Node.js image
# ============================================================================
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache libc6-compat dumb-init curl

# Set working directory
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# ============================================================================
# Stage 2: Dependencies installation
# ============================================================================
FROM base AS deps

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# ============================================================================
# Stage 3: Development stage
# ============================================================================
FROM base AS development

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY . .

# Set environment
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# Expose port
EXPOSE 3000

# Change ownership
RUN chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Start Next.js in development mode
CMD ["dumb-init", "npm", "run", "dev"]

# ============================================================================
# Stage 4: Builder stage
# ============================================================================
FROM base AS builder

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set environment variables for build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Build the application
RUN npm run build

# ============================================================================
# Stage 5: Production stage
# ============================================================================
FROM base AS production

# Set production environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Copy built application
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Expose port
EXPOSE 3000

# Switch to non-root user
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Start the application
CMD ["dumb-init", "node", "server.js"]

# ============================================================================
# Labels for container metadata
# ============================================================================
LABEL maintainer="Infrastructure Agent <infrastructure@waste-mgmt.com>"
LABEL version="1.0.0"
LABEL description="Waste Management System Frontend"
LABEL org.opencontainers.image.source="https://github.com/waste-mgmt/frontend"
LABEL org.opencontainers.image.documentation="https://waste-mgmt.github.io/frontend"
LABEL org.opencontainers.image.licenses="PROPRIETARY"