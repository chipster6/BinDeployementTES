name: E2E Dashboard Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  # Environment variables for testing
  NODE_ENV: test
  DATABASE_URL: postgresql://test_user:test_password@localhost:5432/waste_management_test
  REDIS_URL: redis://localhost:6379
  JWT_SECRET: test_jwt_secret_key_for_cypress_testing
  ENCRYPTION_KEY: test_encryption_key_for_cypress_testing
  
  # External service test credentials
  STRIPE_SECRET_KEY: sk_test_cypress_testing_key
  TWILIO_ACCOUNT_SID: test_account_sid
  TWILIO_AUTH_TOKEN: test_auth_token
  SENDGRID_API_KEY: SG.test_api_key
  SAMSARA_API_TOKEN: test_samsara_token
  MAPBOX_ACCESS_TOKEN: pk.test_mapbox_token
  
  # Cypress configuration
  CYPRESS_baseUrl: http://localhost:3000
  CYPRESS_apiUrl: http://localhost:3001
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # Setup and preparation
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Generate cache key
        id: cache-key
        run: echo "key=node-modules-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
        
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            node-modules-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build

  # Database and services setup
  services-setup:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test database
        run: |
          npm run db:test:setup
          npm run db:test:reset
          
      - name: Seed test data
        run: |
          npm run db:seed
          
      - name: Start backend server
        run: |
          npm run build
          npm start &
          sleep 10
          
      - name: Verify services health
        run: |
          curl -f http://localhost:3001/api/health || exit 1
          redis-cli ping

  # Role-based dashboard testing
  dashboard-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    strategy:
      fail-fast: false
      matrix:
        role: [super_admin, admin, fleet_manager, driver, customer, billing_admin, support]
        browser: [chrome, firefox, edge]
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run Cypress dashboard tests for ${{ matrix.role }}
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: ${{ matrix.browser }}
          spec: |
            cypress/e2e/dashboards/role-based-dashboards.cy.ts
          config: |
            env.testRole=${{ matrix.role }}
          record: true
          parallel: true
          group: Dashboard Testing - ${{ matrix.role }} - ${{ matrix.browser }}
          tag: dashboard,${{ matrix.role }},${{ matrix.browser }}
          
      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-artifacts-${{ matrix.role }}-${{ matrix.browser }}
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 7

  # Authentication workflow testing
  authentication-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run authentication workflow tests
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: chrome
          spec: cypress/e2e/authentication/**/*.cy.ts
          record: true
          parallel: true
          group: Authentication Testing
          tag: authentication,security

  # Business process workflow testing
  workflow-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    strategy:
      fail-fast: false
      matrix:
        workflow: [customer-onboarding, service-management, route-optimization, billing-cycle, emergency-response]
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run workflow tests for ${{ matrix.workflow }}
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: chrome
          spec: cypress/e2e/workflows/**/*.cy.ts
          config: |
            env.testWorkflow=${{ matrix.workflow }}
          record: true
          parallel: true
          group: Workflow Testing - ${{ matrix.workflow }}
          tag: workflow,${{ matrix.workflow }}

  # Performance testing
  performance-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    strategy:
      fail-fast: false
      matrix:
        device: [desktop, tablet, mobile]
        
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run performance tests for ${{ matrix.device }}
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: chrome
          spec: cypress/e2e/performance/**/*.cy.ts
          config: |
            viewportWidth=${{ matrix.device == 'desktop' && '1280' || matrix.device == 'tablet' && '768' || '375' }},
            viewportHeight=${{ matrix.device == 'desktop' && '720' || matrix.device == 'tablet' && '1024' || '667' }}
          record: true
          parallel: true
          group: Performance Testing - ${{ matrix.device }}
          tag: performance,${{ matrix.device }}
          
      - name: Generate performance report
        run: |
          npm run cypress:performance
          
      - name: Upload performance artifacts
        uses: actions/upload-artifact@v3
        with:
          name: performance-report-${{ matrix.device }}
          path: |
            cypress/reports
            cypress/screenshots
          retention-days: 30

  # Accessibility testing
  accessibility-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run accessibility tests
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: chrome
          spec: cypress/e2e/accessibility/**/*.cy.ts
          record: true
          parallel: true
          group: Accessibility Testing
          tag: accessibility,wcag,a11y
          
      - name: Generate accessibility report
        run: |
          npm run cypress:accessibility
          
      - name: Upload accessibility artifacts
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: |
            cypress/reports
            cypress/screenshots
          retention-days: 30

  # Real-time features testing
  realtime-testing:
    runs-on: ubuntu-latest
    needs: [setup, services-setup]
    
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: waste_management_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Setup test environment
        run: |
          npm run db:test:setup
          npm run build
          npm start &
          sleep 15
          
      - name: Run real-time feature tests
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3001/api/health'
          wait-on-timeout: 120
          browser: chrome
          spec: cypress/e2e/realtime/**/*.cy.ts
          record: true
          parallel: true
          group: Real-time Testing
          tag: realtime,websocket,gps

  # Test results aggregation and reporting
  test-results:
    runs-on: ubuntu-latest
    needs: [dashboard-testing, authentication-testing, workflow-testing, performance-testing, accessibility-testing, realtime-testing]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download test artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results
          
      - name: Generate test summary
        run: |
          echo "# E2E Dashboard Testing Results" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Execution Summary" >> test-summary.md
          echo "- **Dashboard Testing**: ${{ needs.dashboard-testing.result }}" >> test-summary.md
          echo "- **Authentication Testing**: ${{ needs.authentication-testing.result }}" >> test-summary.md
          echo "- **Workflow Testing**: ${{ needs.workflow-testing.result }}" >> test-summary.md
          echo "- **Performance Testing**: ${{ needs.performance-testing.result }}" >> test-summary.md
          echo "- **Accessibility Testing**: ${{ needs.accessibility-testing.result }}" >> test-summary.md
          echo "- **Real-time Testing**: ${{ needs.realtime-testing.result }}" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Dashboard Coverage" >> test-summary.md
          echo "- ✅ Super Admin Dashboard" >> test-summary.md
          echo "- ✅ Admin Dashboard" >> test-summary.md
          echo "- ✅ Fleet Manager Dashboard" >> test-summary.md
          echo "- ✅ Driver Dashboard" >> test-summary.md
          echo "- ✅ Customer Dashboard" >> test-summary.md
          echo "- ✅ Billing Admin Dashboard" >> test-summary.md
          echo "- ✅ Support Dashboard" >> test-summary.md
          
      - name: Comment PR with test results
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('test-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
            
      - name: Upload consolidated test results
        uses: actions/upload-artifact@v3
        with:
          name: e2e-test-results
          path: |
            test-results
            test-summary.md
          retention-days: 30
          
      - name: Fail workflow if critical tests failed
        if: |
          needs.dashboard-testing.result == 'failure' ||
          needs.authentication-testing.result == 'failure' ||
          needs.accessibility-testing.result == 'failure'
        run: |
          echo "Critical E2E tests failed"
          exit 1